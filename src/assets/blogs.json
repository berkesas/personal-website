[{"id":1,"slug":"learning-programming-on-your-own","title":"Learning programming on your own","created":"2024-06-22T23:50:21.817Z","updated":"2024-06-22T23:50:21.817Z","tags":"programming self-development","description":"Here are my tips for learning programming on your own using open sources on the Internet","words":" learning by yourself is doable programming can mean a lot of things you start printing hello world on your screen also develop complete production applications that are used people in real life contexts both these and when i the latter fact many programmers selftaught so first thing to know do it another important point keep mind say own without attending bootcamp or getting degree at university if have time resources attend should be option studying materials available web second tips for who dont such an opportunity not fully does one try solve problems all instead learn right ways doing as soon possible from any some cases reinventing wheel will needed understand whats going with but most other peoples code best practices easy sense word beginning may seem believe me english language then adds layer difficulty experience there internet thay was discourage anybody informed because steps coding write couple lines works voila programmer get complicated very fast javascript consolelogyou piece like this changing thousands technology they stale find doesnt work version changes author abandoned long ago persistence friend ready patient obstacle installing development environment tools software see its output merely writing line big achievement field being persistent make successful project interesting useful oneself motivated developing needs divide problem into smaller them example simple list questions answers 1 what my program create keeps birthdays family friends 2 which suitable use html 3 site teaches beginners w3schoolscom really good basic adding depending case conclusion need take break never give up every step stay","link":"","length":623},{"id":2,"slug":"my-aws-cloud-practitioner-exam-experience","title":"Lessons from my AWS Certified Cloud Practitioner exam experience","created":"2024-07-03T22:50:21.817Z","updated":"2024-07-03T22:50:21.817Z","tags":"cloud aws certification","description":"Recently I prepared for AWS Certified Cloud Practioner exam and passed it. Here are my lessons learned.","words":" introduction recently i prepared for the aws certified cloud practitioner exam and successfully passed it here are key lessons learned from this experience there is a wealth of information available online about certification many individuals have generously shared their own preparation journeys insights into obtaining in blog post will share my personal gained not merely recounting significant achievement easiest people pass first attempt neither review an product instead represents perspective on concept what foundational according to its official website validates foudnational highlevel understanding services terminology states that serves as excellent starting point without prior or who transitioning career well those looking establish solid foundation literacy addition level also offers certifications at associate professional specialty levels they described follows knowledgebased rolebased acquire knowledge skills build credibility advanced diving deeper becoming trusted expert your stakeholders simply put you theoretical gain applied develop achieve deep expertise good place start before addressing question want explain why chose azure gcp after conducting some research discovered currently largest provider leader computing while landscape could evolve over time thats current state affairs nonetheless do keep open possibility pursuing future suggests dont need if although been programming since high school years amount decided take path particularly already employed often value argue employers prioritize practical strong portfolio formal credentials however newcomers entering field acquiring appeal potential must begin somewhere learning structured approach building scratch can be challenging therefore believe more beneficial long run compared solely relying tutorials showcase following may give impression but results mere duplication existing limited whats covered concepts theories approaches original sources documentation crucial provides broader upon which robust returning were several reasons decision firstly felt technologies was sufficient aimed reviewing materials quickly realized despite label intricate questions straightforward didnt obvious answers secondly necessarily itself no employer required nor specific job prospect demanded primary interest lay wasnt motivated tick box thirdly am committed higherlevel such had doubts would benefit me essence preparing meant laying groundwork above wasting mental energy fourthly drawing theory know attempting tackle youre adequately does foster effective curious aligns with lev vygotskys zone proximal development ive experienced frustration trying grasp new basics avoid struggle going forward resources used when finished needed changed significantly initially believed comprehensive involving multiple thirdparty providers books these helpful necessary only resource prepare training than enough material additional mock exams basic courses free enhanced require subscription subscribed out curiosity see difference found version ample so worry cant access paid content missing anything most important publicly read blogs where examtakers udemy other specialized trainings opinion arent plan pursue test hypothesis using ill report findings types textbased whitepapers engaging interactive simulations like quest warnedit addictive 3d game designed additionally traditional combine video lectures multiplechoice supplementary offer handson labs complete exercises learn how solutions use features interface screen c all directly every part useful during actual wellaligned teaching developed by assess readiness reschedule twice taking tried two practice platform scoring 81 one 86 passing grade 70 confident rescheduling scored wouldnt home relaxed environment different under stress gauge aim least 5 buffer below 75 might risking money allocated 90 minutes 65 quick finish 30 depends proficiency english nonnative speakers request extension native speaker feel consider option difficulty coverage foundationallevel too difficult align expect encounter any tricky answer confidently everything transparent provided clear guide reference requiring occasionally three correct onecorrectchoice easier lab assignment areas security compliance core economics big theme migrating benefits times technology hey we live market society sound economic foundations motivation moving technical steps migration flip side lot system design software architecture apply beyond domain switch easy understand systems id just terms same paradoxical better understood platforms work transferable angular react django symfony again sequence change make 1 especially paths links together connects objectives 2 visiting respective page 3 study set sample asked 4 prep standard course pay try real account visualize 6 clfc02 concise summary things 7 wellarchitected framework adoption caf very carefully 8 whitepaper overview amazon web because ask service delivers functionality 9 escape room 10 check special tips names similar each misleading few examples though connect support direct dedicated internet connection cost explorer usage cloudwatch monitoring metrics cloudtrail user activities guardduty threat detection detective analyze suspicious inspector vulnerability management best way remember meanings similarsounding them matter hard couldnt consistently recall differences between find method works alternatively yourself potentially incorrectly focusing getting right opted pearson vue testing center sure celsius fahrenheit hot boston summer day took commuter rail red line reached 20 chat site administrator worked depending circumstances deciding quiet concentrate answering doesnt guarantee absolute consideration never conditions venue whether windows provide isolation theres nearby construction aspect affect focus takeaways summarize suggestions view tool rather requirement off thoroughly rushing through resourcesthey quality engage reading ensure wellprepared logistics","link":"","length":2133},{"id":3,"slug":"using-coursera-for-learning-software-development","title":"Using Coursera for learning software development","created":"2024-06-07T23:50:21.817Z","updated":"2024-06-22T23:50:21.817Z","tags":"coursera learn software","description":"In this blog, I share several tips to improve your learning, based on my own experience of learning on Coursera","words":" how am i using coursera ive been leveraging to boost my coding skills since 2022 opted for the plus subscription and its a fantastic resource with have access an abundance of resourcesfar more than could ever hope explore before settling on conducted some research considered udemy edx as alternatives both platforms received high praise but courseras package allaccess approach opposed percourse payment model was deciding factor me perceptions theres no shortage blogs youtube videos weighing pros cons moreover prevalent belief that certificates from like dont carry much weight in job market searching is worth it will bring up variety these viewpoints initially such skepticism did dampen enthusiasm however after engaging courses realized personal growth has incredibly beneficial are there quality absolutely answer resounding yes journey through various led discover three tiers offerings firstly crafted by industry giants google meta amazon ibm caliber mirrors prestige companies offer them taken several gained substantial knowledge secondly reputable universities take instance software product management specialization university alberta despite not being very familiar this institution found course content delivery be exceptional lastly significantly enhanced learning due excellence professors favorites were python everybody charles russell severance michigan algebra elementary advanced joseph w cutrone johns hopkins fullstack web development react jogesh k muppala hong kong science technology financial accounting brian bushee wharton school fun way educators convey their material made feel though right classroom while numerous other commendable particular stood out which areas need improvement fundamentally platforma tool teaching effectiveness hinges we users choose utilize one aspect falls short discussions feature forums often filled lessthanhelpful entries students merely posting ok or good even participation isnt mandatory diminishes peerlearning experience seems social issue technical another facet requires attention responsiveness queries occasionally assignments come errors issues obtaining support instances rare if outright impossible recognizing limitations recalibrated expectations continued imbalance workload distribution certain sometimes instructional too simplistic compared complexity vice versa discrepancy suggests creators may devoted sufficient consideration pedagogical balance coursework why do think still features havent utilized here aspects really appreciate userinterface ui intuitive userfriendly efficient consistently served well completed modules indicated green checkmark icon handy track progress presentation materials segmented into weeks thoughtfully arranged logical sequence builds previously acquired platform offers highquality visual learners complete transcriptions added convenience diversity approaches celebrates uniqueness distinctively fostering varied keeps motivated impressed many rating satisfactory excellent significant number developed renowned esteemed what worked youre billed duration your allows you flexibility youd depending pace schedule chose tackle multiple simultaneously couple reasons wanted avoid monotony subjects traditional semester where study different related recognized challenging daunting give mind breather shift focus instead hitting wall difficult problem thus keeping process active nevertheless crucial maintain manageable load enrolling four at once counterproductive hindered approached foundational stepping stones new understood completion alone wouldnt render expert provide essential understanding determine future trajectory conclusion intricate field demands dedication master wellorganized offered framework im actively expanding","link":"","length":935},{"id":4,"slug":"why-you-should-learn-programming","title":"Why you should learn programming?","created":"2024-06-08T23:50:21.817Z","updated":"2024-06-22T23:50:21.817Z","tags":"programming learn career","description":"In this blog, I present several reasons how programming can be useful in the long-term in your life regardless of your skill level","words":" ive been learning programming since 1994 here i want to share some tips based on my personal experience hope you will be able avoid of the mistakes made and learn from it in this blog use coding interchangeably even a basic skill level have huge impact long run with can start making your computer do things automate lot tasks increase productivity so if dont end up building software commercially help lets imagine that 10 skills whatever might mean am assuming write programs increases by essentially automating multiply 30 years save much time life using let me give an example own wrote simple tool called tizachar its shortcut system instead going desktop clicking or operating systems menus window which shows most frequently used shortcuts create access them fast everyday cant not because know is faster than previous method accessing files launching find job means code achieve noncoding objective therefore need focus specific area interests such as web development mobile app data science important choose business domain what for develop games educational apps websites where people sell buy would like work working particular remain motivated see how other peoples being real also future establish company yourself acquiring expertise part becoming good programmer there were two problem areas attracted interest needed online dictionary native language turkmen did exist fact meant was interesting had practical application first all useful but once created could well when think beginning tools continuously improve program very hard hand patient persistent challenging however dedication wealth materials available entirely possible become proficient remember key basics build solid foundation challenge new problems solve conclusion conclude are couple reasons personally manage earn money beyond thats better","link":"","length":644}]